{"ast":null,"code":"var _jsxFileName = \"/Users/dieu/projects/cryptobook/src/components/LineChart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst LineChart = ({\n  coinHistory,\n  currentPrice,\n  coinName\n}) => {\n  var _coinHistory$data2;\n\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < (coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data = coinHistory.data) === null || _coinHistory$data === void 0 ? void 0 : (_coinHistory$data$his = _coinHistory$data.history) === null || _coinHistory$data$his === void 0 ? void 0 : _coinHistory$data$his.length); i += 1) {\n    var _coinHistory$data, _coinHistory$data$his;\n\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [{\n      label: 'Price In USD',\n      data: coinPrice,\n      fill: false,\n      backgroundColor: '#0071bd',\n      borderColor: '#0071bd'\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"chart-title\",\n        children: [coinName, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"price-container\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"price-change\",\n          children: [\"Change: \", coinHistory === null || coinHistory === void 0 ? void 0 : (_coinHistory$data2 = coinHistory.data) === null || _coinHistory$data2 === void 0 ? void 0 : _coinHistory$data2.change, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          level: 5,\n          className: \"current-price\",\n          children: [\"Current \", coinName, \" Price: $ \", currentPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/dieu/projects/cryptobook/src/components/LineChart.jsx"],"names":["React","Line","Col","Row","Typography","Title","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","change"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,QAAqC,MAArC;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,UAAlB;;AAEA,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AAC1D,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,aAAa,GAAG,EAAtB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAGL,WAAH,aAAGA,WAAH,4CAAGA,WAAW,CAAEM,IAAhB,+EAAG,kBAAmBC,OAAtB,0DAAG,sBAA4BC,MAA/B,CAAhB,EAAuDH,CAAC,IAAG,CAA3D,EAA6D;AAAA;;AACzDF,IAAAA,SAAS,CAACM,IAAV,CAAeT,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BK,KAA3C;AACAN,IAAAA,aAAa,CAACK,IAAd,CAAmB,IAAIE,IAAJ,CAASX,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BO,SAArC,EAAgDC,kBAAhD,EAAnB;AACH;;AAED,QAAMP,IAAI,GAAG;AACTQ,IAAAA,MAAM,EAAEV,aADC;AAETW,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,cADT;AAEEV,MAAAA,IAAI,EAAEH,SAFR;AAGEc,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,eAAe,EAAE,SAJnB;AAKEC,MAAAA,WAAW,EAAE;AALf,KADQ;AAFD,GAAb;AAaE,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADT,OADK;AADD;AADM,GAAhB;AAYF,sBACG;AAAA,4BACC,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,SAAS,EAAC,aAA3B;AAAA,mBAA0CtB,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAiB,UAAA,SAAS,EAAC,cAA3B;AAAA,iCAAmDF,WAAnD,aAAmDA,WAAnD,6CAAmDA,WAAW,CAAEM,IAAhE,uDAAmD,mBAAmBmB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAiB,UAAA,SAAS,EAAC,eAA3B;AAAA,iCAAoDvB,QAApD,gBAAwED,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAQC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEK,IAAZ;AAAkB,MAAA,OAAO,EAAEc;AAA3B;AAAA;AAAA;AAAA;AAAA,YARD;AAAA,kBADH;AAYH,CA9CD;;KAAMrB,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd'\n\nconst { Title } = Typography\n\nconst LineChart = ({coinHistory, currentPrice, coinName }) => {\n    const coinPrice = [];\n    const coinTimestamp = [];\n\n    for(let i = 0; i < coinHistory?.data?.history?.length; i +=1){\n        coinPrice.push(coinHistory.data.history[i].price)\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n    }\n\n    const data = {\n        labels: coinTimestamp,\n        datasets: [\n          {\n            label: 'Price In USD',\n            data: coinPrice,\n            fill: false,\n            backgroundColor: '#0071bd',\n            borderColor: '#0071bd',\n          },\n        ],\n      };\n    \n      const options = {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          ],\n        },\n      };\n\n    return (\n       <>\n        <Row className=\"chart-header\">\n            <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\n            <Col className=\"price-container\">\n                <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n                <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n            </Col>\n        </Row>\n        <Line data={data} options={options}/>\n       </>\n    )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}