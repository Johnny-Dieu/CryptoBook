{"ast":null,"code":"var _jsxFileName = \"/Users/dieu/projects/cryptobook/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  simplified\n}) => {\n  _s();\n\n  var _cryptosList$data;\n\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {}, [cryptosList, searchTerm]);\n  if (isFetching) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-crypto\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search Cryptocurrency\",\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-image\",\n              src: currency.iconUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 36\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Market Cap: \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Daily Change: \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Cryptocurrencies, \"HXPxeINip1YS7dje13ZO/fYmiWY=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/dieu/projects/cryptobook/src/components/Cryptocurrencies.jsx"],"names":["React","useState","useEffect","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","coins","searchTerm","setSearchTerm","e","target","value","map","currency","id","rank","name","iconUrl","price","marketCap","change"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,MAAtC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAAA;;AACxC,QAAMC,KAAK,GAAGD,UAAU,GAAG,EAAH,GAAQ,GAAhC;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA;AAArB,MAAoCN,kBAAkB,CAACG,KAAD,CAA5D;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAACa,WAAD,aAACA,WAAD,4CAACA,WAAW,CAAED,IAAd,sDAAC,kBAAmBK,KAApB,CAAtC;AACA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACY,WAAD,EAAcK,UAAd,CAFM,CAAT;AAIA,MAAIJ,UAAJ,EAAgB,OAAO,YAAP;AAEhB,sBACG,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACK,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,uBAAnB;AAA2C,QAAA,QAAQ,EAAGM,CAAD,IAAOD,aAAa,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzE;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMC,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAuB,MAAA,SAAS,EAAC,uBAAjC;AAAA,gBACKP,OADL,aACKA,OADL,uBACKA,OAAO,CAAEQ,GAAT,CAAcC,QAAD,iBACV,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,aAAtC;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,QAAQ,CAACC,EAAG,EAAjC;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,KAAK,EAAG,GAAED,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,IAAK,EAAhD;AACQ,YAAA,KAAK,eAAE;AAAK,cAAA,SAAS,EAAC,cAAf;AAA8B,cAAA,GAAG,EAAEH,QAAQ,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,oBADf;AAAA,oCAEI;AAAA,oCAAW1B,OAAO,CAACsB,QAAQ,CAACK,KAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,yCAAgB3B,OAAO,CAACsB,QAAQ,CAACM,SAAV,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,2CAAkB5B,OAAO,CAACsB,QAAQ,CAACO,MAAV,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyDP,QAAQ,CAACC,EAAlE;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAuBH,CAnCD;;GAAMhB,gB;UAEwCD,kB;;;KAFxCC,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd'\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = ({ simplified}) => {\n    const count = simplified ? 10 : 100;\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n    const [ searchTerm, setSearchTerm ] = useState('');\n\n    useEffect(() => {\n\n    }, [cryptosList, searchTerm])\n    \n    if (isFetching) return \"Loading...\"\n\n    return (\n       <React.Fragment>\n           <div className=\"search-crypto\">\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\n            </div>\n\n\n        <Row gutter={[32, 32]} className=\"crypto-card-container\">\n            {cryptos?.map((currency) => (\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                    <Link to={`/crypto/${currency.id}`}>\n                    <Card title={`${currency.rank}. ${currency.name}`} \n                            extra={<img className=\"crypto-image\" src={currency.iconUrl} />}>\n                        <p>Price: {millify(currency.price)}</p>\n                        <p>Market Cap: {millify(currency.marketCap)}</p>\n                        <p>Daily Change: {millify(currency.change)}%</p>\n                    </Card>\n                    </Link>\n                </Col>\n            ))}\n        </Row>\n       </React.Fragment>\n    )\n}\n\nexport default Cryptocurrencies\n"]},"metadata":{},"sourceType":"module"}