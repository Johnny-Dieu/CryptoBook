{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': 'fadc909fd1msh955469125639112p1aa7b9jsnefe6d5642180'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coindId,\n        timeperiod\n      }) => createRequest(`/coin/${coinId}`)\n    }),\n    getExchanges: builder.query({\n      query: count => createRequest(`/exchanges`)\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery\n} = cryptoApi;","map":{"version":3,"sources":["/Users/dieu/projects/cryptobook/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","coindId","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,gBAAgB,GAAG;AACrB,qBAAmB,6BADE;AAErB,oBAAkB;AAFG,CAAzB;AAKA,MAAMC,OAAO,GAAG,qCAAhB;;AAEA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAEJ;AAAhB,CAAV,CAAtB;;AAEA,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;AAC/BQ,EAAAA,WAAW,EAAE,WADkB;AAE/BC,EAAAA,SAAS,EAAER,cAAc,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAFM;AAG/BO,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAIC,KAAF,IAAaV,aAAa,CAAE,gBAAeU,KAAM,EAAvB;AADX,KAAd,CADS;AAIrBC,IAAAA,gBAAgB,EAAEJ,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAIG,MAAF,IAAcZ,aAAa,CAAE,SAAQY,MAAO,EAAjB;AADN,KAAd,CAJG;AAOrBC,IAAAA,gBAAgB,EAAEN,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAE,CAAC;AAAEK,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,KAA6Bf,aAAa,CAAE,SAAQY,MAAO,EAAjB;AADrB,KAAd,CAPG;AAUrBI,IAAAA,YAAY,EAAET,OAAO,CAACE,KAAR,CAAc;AACxBA,MAAAA,KAAK,EAAIC,KAAF,IAAaV,aAAa,CAAE,YAAF;AADT,KAAd;AAVO,GAAd;AAHoB,CAAD,CAA3B;AAmBP,OAAO,MAAM;AACTiB,EAAAA,kBADS;AAETC,EAAAA,wBAFS;AAGTC,EAAAA;AAHS,IAIThB,SAJG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': 'fadc909fd1msh955469125639112p1aa7b9jsnefe6d5642180'\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: ( count ) => createRequest(`/coins?limit=${count}`),\n        }),\n        getCryptoDetails: builder.query({\n            query: ( coinId ) => createRequest(`/coin/${coinId}`),\n        }),\n        getCryptoHistory: builder.query({\n            query: ({ coindId, timeperiod }) => createRequest(`/coin/${coinId}`),\n        }),\n        getExchanges: builder.query({\n            query: ( count ) => createRequest(`/exchanges`),\n        }),\n    })\n});\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetExchangesQuery,\n} = cryptoApi;"]},"metadata":{},"sourceType":"module"}