{"ast":null,"code":"var _jsxFileName = \"/Users/dieu/projects/cryptobook/src/components/Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = () => {\n  _s();\n\n  var _cryptosList$data;\n\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery();\n  const [cryptos, setCryptos] = useState(cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins);\n  console.log(cryptos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutters: [32, 32],\n      className: \"crypto-card-container\",\n      children: cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-imtage\",\n              src: currency.iconUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 79\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Market Cap: \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.Change)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cryptocurrencies, \"hVeP1R7qfBQ/5MFrwV0I+buoFtI=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["/Users/dieu/projects/cryptobook/src/components/Cryptocurrencies.jsx"],"names":["React","useState","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","data","cryptosList","isFetching","cryptos","setCryptos","coins","console","log","map","currency","id","rank","name","iconUrl","price","marketCap","Change"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,MAAtC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA;AAArB,MAAoCJ,kBAAkB,EAA5D;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACU,WAAD,aAACA,WAAD,4CAACA,WAAW,CAAED,IAAd,sDAAC,kBAAmBK,KAApB,CAAtC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,sBACG;AAAA,2BACC,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE,CAAC,EAAD,EAAK,EAAL,CAAd;AAAwB,MAAA,SAAS,EAAC,uBAAlC;AAAA,gBACKA,OAAO,CAACK,GAAR,CAAaC,QAAD,iBACT,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,aAAtC;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,QAAQ,CAACC,EAAG,EAAjC;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,KAAK,EAAG,GAAED,QAAQ,CAACE,IAAK,KAAIF,QAAQ,CAACG,IAAK,EAAhD;AAAmD,YAAA,KAAK,eAAE;AAAK,cAAA,SAAS,EAAC,eAAf;AAA+B,cAAA,GAAG,EAAEH,QAAQ,CAACI;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAA1D;AAAA,oCACI;AAAA,oCAAWrB,OAAO,CAACiB,QAAQ,CAACK,KAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yCAAgBtB,OAAO,CAACiB,QAAQ,CAACM,SAAV,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,oCAAWvB,OAAO,CAACiB,QAAQ,CAACO,MAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAyDP,QAAQ,CAACC,EAAlE;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADD,mBADH;AAiBH,CAtBD;;GAAMX,gB;UACwCD,kB;;;KADxCC,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd'\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nconst Cryptocurrencies = () => {\n    const { data: cryptosList, isFetching } = useGetCryptosQuery();\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\n    console.log(cryptos)\n\n    return (\n       <>\n        <Row gutters={[32, 32]} className=\"crypto-card-container\">\n            {cryptos.map((currency) => (\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n                    <Link to={`/crypto/${currency.id}`}>\n                    <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-imtage\" src={currency.iconUrl} />}>\n                        <p>Price: {millify(currency.price)}</p>\n                        <p>Market Cap: {millify(currency.marketCap)}</p>\n                        <p>Price: {millify(currency.Change)}</p>\n                    </Card>\n                    </Link>\n                </Col>\n            ))}\n        </Row>\n       </>\n    )\n}\n\nexport default Cryptocurrencies\n"]},"metadata":{},"sourceType":"module"}